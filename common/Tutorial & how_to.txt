Tutorial: Make a packaging request

0. Required software tools & Set-up
1. Copy & edit, or Create template svg files with mock data.
2. Add ${fields} that have been searched in contract with regular expressions, RegEx
3. Add photos, barcodes, edit fields'data as necessary

All processes can be performed in a copy of the .../data/A000001-start project
After all processes are performed, a version of the resulting package request is in the .../data/A000001-final directory

########################################################################################################################
Demo

1. Look at a few end products

2. Look at A0000001-final results

3. Look at A0000001-start elements and results

########################################################################################################################
The program 'automatic_pckg' automatically generates packaging requests formatted as pdf, layed out so that they can
directly be sent to suppliers.

The program aims at reducing manual input errors as well as translation and presentation discrepancies.

For contracts with large numbers of products, producing a reliable and coherent packaging request is noticeably faster
than other methods, specifically modifying an existing request or starting from scratch with Adobe Illustrator.

Finally, the program allows for more flexibility in the design process, as changes can be instantly propagated to the
whole set of products without lots of re-work.

The overall process of the program is to get data from SAP in XL format, segregate it into JSON files that will feed SVG
templates to finally produce PDF or ODG (readable with MSWord) files. As per below:

SAP > XL > JSON
                > SVG > PDF & ODG
            SVG

Program inputs are as follows:
- a SVG template for each level of packaging: outer box, inner box, plastic bag, sticker ...
This template is built with Inkscape, an open-source program that generates Scalable Vector Graphic, SVG files.

- a list of parameters that allow to customize the template and specifically:
    . insert data fields to populate information from XL to labels
    . insert pictures in labels, possibly each specific to their corresponding product, in a variety of
      formats (preferred format being SVG, as it scales along with the rest of the document)
    . automatically generate EAN-13 bar codes

This data is entirely human readable. It is stored in a 4 levels directory tree as such:
- at root level: program-info.json contains data on the contract being edited and the position of the initial .xls data
    source file.
- up one level are directories such as:
    . contract-samples: containing reference finished packaging requests that can be further re-used
    . common: containing label templates, regular expressions to search for data in excel,Â
    . data: containing work in process when building a packaging request
- up the data directory are contract-specific data directories, each directory contains:
    . a  .../doc_setup.json file with margins, cover page, and vertical offset indication
        margins and vertical offset are mesured in mm
        margin_w is the width of one horizontal margin, set to 15 by default
        margin_h is the height of one horizontal margin, set to 15 by default
        page1_vert_offset is set to 0 by default
    . a directory for each label template that needs to be designed
- label template directories each contain:
    . a label_template.svg file, svg graphic template for the label to be printed
    . a template-info.json file that points to data needed to feed the template

########################################################################################################################
0. Required software tools & Set-up

All tools can be installed from afp://admin@ftp-server.local/业务组文件/automatic_package_requests

If necessary, new versions of qpdf, a tool that merges individual pdf pages into one document, are available at:
 https://github.com/qpdf/qpdf/releases


########################################################################################################################
2.  How to select a field from the xls contract file and insert it as a field in a label template

    This paragraph shows how to insert two fields: 'plstc_bg' and 'color_zh' in a label template.
    'plstc_bg' is already captured as a field whose data depends on the product it corresponds to.
    'color_zh' data is not captured yet.  This procedure shows how to capture it.

As an example, this shows how to insert the field 'plstc_bg' in the template so that it can be populated with the data
from the xls file contract.

1. Run automatic_pkg.py

2. Run  "1. step_1__select_a_contract_选择合同号": enter 1 Return
     Double click A000001-start
     Double click A000001-start.xls

    Status of the selection should appear on line 'Step 1 select a contract:' above the next menu

3. Run "3. step_3__select_fields_to_print_for_each_template_选择每种标签类型的资料": Enter 3 Return
    If ~~~ Now working on template: is not 'a.Outer_box_外箱', then enter 0 Return and select it

    a. Check if the desired field is already in the "~~~ Specific fields selected so far" list, then there is nothing
    more to do

    b. Check if it appears in the matrix of fields to be selected from for example 'plstc_bg', then:
    'e. edit_a_template'  e Return
    '0. Outer_box_外箱' 0 Return
    '2. edit_fields' 2 Return
    "'a' to add a field' a Return
    From the list ~~~ Can be added; , enter corresponding # for the field to be added, Return
    'b' to go back
    Verify that 'plstc_bg' is in the list of selected fields to far

    c. If the desired field does not appear in the matrix, for example a field 'color_zh' that would capt the '颜色' info
    In a browser, open https://regex101.com
    Check Flavor as Python  (Python should appear as bold characters and followed by a check sign)

    Copy all contract's contents from the file .../data/A000001-start/A000001-start-contract.json into
          the https://regex101.com  TEST STRING box

    In regular expression, check that \w颜色 has 8 matches (the number of products)
           and that \w(?=颜色) matches 8 times with the color data needed for the field

    In .../common/regular_expression_local.json, add a line formatted as:
     { "what": "color_zh", "how": "\\w(?=颜色)"}
    DO MIND the \\ instead of the unique \ in regex101.com
    If this line is the last one, there should not be a comma at the end. DO CHECK that there is a comma at the end
    of the line that precedes the one you added.

    Back in automatic_pkg, run '5. process_selected_contract'
    Go to '3. step_3__select_fields_to_print_for_each_template_选择每种标签类型的资料", check that the matrix has now
    a field 'color_zh'
    Process as in 3.b precedently


4. In the .../data/A000001-start/a.Outer_box_外箱 directory, open the label_template.svg file with inkscape
   Create a text field that will include ${plstc_bg} . {plstc_bg} is already created, just precede with a $ and save.

5. In menu ~~~ Step 3: ...     check that the label now includes data from the newly added field:
    1 Return , to check the first product prints correctly
    2 Return ,  to check all products print correctly

NB: Some fields, independent from the template but necessary for the page format, are not inserted as specific fields in
template-info.json.  They are as follows:
 ${contract_n}, the contract number
 ${t}, the rank of the template being printed
 ${i}, the rank of the product being printed
These can be directly used, particularly in the template heading, as is done in A000001-final/f.Prod_sticker_塑料上不干胶
note that, in this directory, the list of 'selected_fields' is empty, but the information on ${contract_n}, ${t}, ${i}
is still provided to build the packaging request.

########################################################################################################################
How to insert a field in French as translation of a Chinese field

As a convention: all fields with name finishing with _zh will be translated into French according to the translation
that is stored in .../common/zh_fr.json
For example if my_field_zh is in the list of selected fields, then a field my_field_fr is available to be used in
templates
Translation of field data has to be provided in .../common/zh_fr.json

########################################################################################################################
How to modify data from the xls contract file and insert it as a field in a label template

A. Simple option: after performing all other edits, use a text editor to open the final .svg file to be turned into a
pdf file.
Do the search, replace as necessary, close and print.
! These edits will not subsist if the program is to be ran again !

B. Do these edits in SAP and generate a new xls contract file. These edits will remain.

C. Program option
1. In .../data/A00001-start/a.Outer_box_外箱/template-info.json switch "pre_processing" to true

2. Run automatic_pkg.py 1 to select A000001-start, 3 to select the template
   Observe that the file template-info.json has changed: "pre_processing" is now a list of new fields that
   can be used in templates, their data being derived from existing selected fields as replacements 'repl' according to
   a regular expression 'regex'

3. In 'template-info.json':
    Replace 'new_field' with the name of the field you wish to create
    Fill the 'field' name that will be the source of data for 'new_field'
    Run pre_process again
    In .../data/A00001-start/a.Outer_box_外箱, a new file named 'field'.txt now exists. It contains this field data for
    all products in the contract.

4. Use a text editor to copy information from 'field'.txt, paste into www.regex101.com TEST STRING window
    In regex101.com check Flavor as Python  (Python should appear as bold characters and followed by a check sign)
    In the REGULAR EXPRESSION window, test a regex to seize the desired data
    Open the SUBSTITUTION WINDOW at the bottom of the screen, test a regex that gives the expected result
    Paste both expressions in template-info.json  .  Make sure that backslash characters '\' are now doubled '\\'

5. Run 'pre_process' again and observed that a new field is now available in .mako_input.json to be used in templates


########################################################################################################################
How to select a field whose data is not populated in all products in the xls contract file and insert it in a label
template

A. Simple option: consistenly fill the information for each product in SAP and in the xls contract file.
If some information is not necessary for all, it can be mentionned as blank ''.

B. Program option
1. In .../data/A00001-start/a.Outer_box_外箱/template-info.json  add the field name in the "selected_fields" list
and switch "partially_populated_fields" to true

2. Run automatic_pkg.py 1 to select A000001-start, 3 to select the template
   Observe that the file template-info.json has changed: "partially_populated_fields" is now a list of fields that
   can be used in templates, even if their data is only partially populated.

########################################################################################################################
How to add pictures in some labels

A.  Simple option: after performing all other edits, use inskcape to open the final .svg files before exporting them
    into a pdf file
Paste in pictures, save and close.
In 3.Select_specific_fields  run the function 55.remove_watermarks_and_produce_pdf_deliverables  , Enter 55 Return
! These edits will not subsist if the program is to be ran again !


B. Program option:
1. For each template, store pictures in a sub-directory to the one of the template named 'pics'
    As all pictures from all templates will be copied in the same sub-directory, please use explicit names for picture
    files.  Names like pic1, fig2, photo_n ... should be avoided.

2. In .../data/A00001-start/a.Outer_box_外箱/template-info.json switch "pictures" to true
    Run pre_process again
    template-info.json now has a skeleton to insert pictures for all products in the contract.  Enrich or trim out the
    list if you need less or more pictures.

########################################################################################################################
How to add barcodes to labels

In .../data/A00001-start/a.Outer_box_外箱/template-info.json switch "barcodes" to true
    Run pre_process again
    template-info.json now has a skeleton to insert barcodes for all products in the contract.

########################################################################################################################
How to edit field's data

A. Simple option: consistenly fill the information for each product in SAP and in the xls contract file.
   Simplest by far.

B. Program option
1. In .../data/A00001-start/a.Outer_box_外箱/template-info.json, switch "pre_processing" to true
    Run automatic_pkg, select the contract, select the template, then back_后退
    Observe that the file template-info.json has changed: "pre_processing" has now a data structure that can be modified
    to get a new field based on an existing field's data.
    As an example, given in .../data/A000001-final/a.Outer_box_外箱，the data structure should be edited as follows:
    "pre_processing": {
        "better_spec": {    # The name of the new field to be used in the svg template
            "field": "xl_prod_spec",    # the name of the field that contains existing data
            "regex": "(\\d+)x(\\d+ mm)",    # the regex search to be performed on this data, use https://regex101.com
            "repl": "\\1 x \\2",    # the replacement formula to populate the new data field
            "default": ""   # a default value to be used if regex was unsuccessful
        }
    Run pre-processing, the new field is available to populate data in the template

########################################################################################################################

Create a shortcut on the Desktop pointing to cmd /K "C:\Users\Administrator\2021.01.05_project_automatic_pkg_request\automatic_pkg.bat"

vim:tw=0:
